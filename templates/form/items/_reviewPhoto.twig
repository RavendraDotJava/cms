{% import 'partials/_macros' as helpers %}

{% set defaults = {
  'name' : '',
  'label' : '',
  'instructions': '',
  'photos': [],
  'required': false,
} %}

{% if settings is defined %}
  {% set settings = defaults|merge(settings) %}
{% else %}
  {% set settings = defaults %}
{% endif %}

<div class="mq768:flex">
  <label for="{{ settings.name }}" class="{{ component('label', false, '') }}">{{ settings.label }}{{ settings.required ? '*' : '' }}</label>
  {% if settings.instructions is not empty %}
    <p class="mb-p10 mq768:mb-none mq768:ml-p10">{{ settings.instructions }}</p>
  {% endif %}
</div>

<div x-comp="previewImage" x-data="previewImage({ imageUploadId: 'reviewFileUpload', imagePreviewId: 'reviewPhotoPreview', files: null })">

  <div class="flex flex-wrap">

    {# File Upload #}
    <label for="reviewFileUpload" class="transition-all relative min-w-p80 min-h-p80 flex items-center justify-center rounded-full border border-dashed border-terracotta cursor-pointer hover:border-black m-p10">
      <span class="text-h3" x-show="!files">+</span>
      <input type="radio" id="reviewPhotoUpload" name="customPhoto" value="" class="hidden peer">
      <input type="file"
        id="reviewFileUpload"
        name="reviewPhoto"
        class="hidden"
        x-on:change="files = Object.values($event.target.files), showPreview()">
      <img id="reviewPhotoPreview"
        alt="Preview image"
        class="absolute rounded-full overflow-hidden border border-terracotta peer-checked:border-black w-full h-full object-cover opacity-80 peer-checked:opacity-100"
        x-show="files"
        x-transition.opacity>
    </label>

    {# Current User Photo #}
    {% if currentUser %}
      {% set photoId = 'userPhoto-' ~ currentUser.username %}
      <label for="{{ photoId }}" class="cursor-pointer m-p10 group">
        <input type="radio" id="{{ photoId }}" name="reviewPhoto" value="{{ currentUser ? currentUser.photo is not empty ? currentUser.photo.url : 'none.jpeg' }}" class="hidden peer" @change="{{ currentUser.photo ? 'onClick()' : false }}" checked>
        {% include 'components/_userPhoto' with { 'settings': {
          'imgSize': 80,
          'classes' : 'transition-all opacity-80 rounded-full border border-terracotta peer-checked:border-black peer-checked:opacity-100 group-hover:border-black min-w-p80 min-h-p80',
        }} %}
      </label>
    {% endif %}

    {# Global Photos #}
    {% if settings.photos|length %}
      {% for photo in settings.photos %}
        {% set thumb = {
          mode: 'crop',
          width: 80,
          height: 80,
          quality: 75,
          position: 'center-center'
        } %}

        <label for="{{ photo.id }}" class="cursor-pointer m-p10 group">

          <input type="radio" id="{{ photo.id }}" name="reviewPhoto" value="{{ photo.url }}" class="hidden peer" @change="onClick()" {{ not currentUser ? loop.index == 1 ? 'checked' }}>
          <img src="{{ photo.getUrl(thumb) }}"
          width="{{ photo.getWidth(thumb) }}"
          height="{{ photo.getHeight(thumb) }}"
          alt="{{ 'Profile Image ' ~ loop.index }}"
          class="transition-all opacity-80 rounded-full border border-terracotta peer-checked:border-black peer-checked:opacity-100 group-hover:border-black" />
        </label>
      {% endfor %}
    {% endif %}
  </div>

  {# File Name - When File Upload is used #}
  <div x-text="files ? files.map(file => file.name).join(', ') : ''" x-show="files" x-transition.opacity class="mt-p16"></div>
</div>



